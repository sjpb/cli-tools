#!/usr/bin/env python

import os, pprint
import yaml

def main():

    common_inventory_root = '%s/environments/common/inventory/' % os.environ['APPLIANCES_REPO_ROOT']

    # get group descriptions from APPLIANCES_REPO_ROOT/environments/common/inventory/groups
    common_groups = {}
    current_group = None
    with open(os.path.join(common_inventory_root, 'groups')) as f:
        for line in f:
            line = line.strip()
            if line.startswith('['):
                current_group = line[1:].split(']')[0].strip().split(':')[0]
            elif current_group:
                if line.startswith('#'):
                    common_groups[current_group] = {'description':line.lstrip('#').strip()}
                else:
                    common_groups[current_group] = {'description':'(no description)'}
                current_group = None
        if current_group: # handle trailing group without description
            common_groups[current_group] = {'description':'(no description)'}

    # read common vars from APPLIANCES_REPO_ROOT/environments/common/inventory/group_vars/*
    for group_file in os.listdir(os.path.join(common_inventory_root, 'group_vars', 'all')):
        group = group_file[:-4]
        if group not in common_groups:
            common_groups[group] = {'description':'(no description)'}
        with open(os.path.join(common_inventory_root, 'group_vars', 'all', group_file)) as varfile:
            #group_vars = yaml.safe_load(varfile)
            common_groups[group]['common_vars'] = yaml.safe_load(varfile)

    pprint.pprint(common_groups)

    # read group overrides from APPLIANCES_ENVIRONMENT_ROOT/inventory/groups

    # read specific vars from APPLIANCES_ENVIRONMENT_ROOT/inventory/group_vars/*


if __name__ == '__main__':
    main()